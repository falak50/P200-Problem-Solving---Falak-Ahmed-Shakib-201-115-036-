#include<bits/stdc++.h>
using namespace std;
typedef long long   ll;
typedef pair<ll,ll> pll;
#define fastread() (ios_base:: sync_with_stdio(false),cin.tie(NULL))
#define ff first
#define ss second
#define pb push_back
#define all(v) v.begin(),v.end()
ll const MOD=1e9+7;
#define eb emplace_back
int main()
{

    fastread();


    ll t;

    cin>>t;
ll c=1;

    while(t--)
    {

        ll n;

        cin>>n;
        ll ara[n+1],a[n+1];

        map<ll,ll>mp;

        for(ll i=1; i<=n; i++)
        {
            cin>>ara[i];
            a[i]=ara[i];
            mp[ara[i]]++;
        }

        vector<ll>v;

        for(ll i=1; i<=n; i++)
        {
            if(mp[i]==0)v.pb(i);
        }
        //   sort(all(v),greater<ll>());
        ll cnt=0;
        map<ll,ll>m;
        for(ll i=1; i<=n; i++)
        {
            if(mp[ara[i]]>1)
            {
                if(v[v.size()-1]==i)
                {
                    if(v.size()==1)continue;

                    ll a=i;
                    v.pop_back();
                     m[i]=1;
                mp[ara[i]]--;
                ara[i]=v[v.size()-1];
                v.pop_back();
                    v.pb(i);

                }else{

                 m[i]=1;
                mp[ara[i]]--;
                ara[i]=v[v.size()-1];
                v.pop_back();
                }

            }
            //else cnt++;
        }



        for(ll i=1; i<=n; i++)
        {
            //cout<<ara[i]<<" ";

            if(i==ara[i])
            {
                for(ll j=1;j<=n;j++)
                {
                    if(i==j)continue;

                   if(m[j])
                   {
                       swap(ara[i],ara[j]);
                       break;
                   }
                }
            }
        }

           for(ll i=1;i<=n;i++)
        {
            if(a[i]==ara[i])cnt++;
        }


       // cout<<c++<<" case"<<endl;

        cout<<cnt<<endl;


        for(ll i=1;i<=n;i++)
        {
            cout<<ara[i]<<" ";
        }cout<<endl;
       // cout<<endl;



    }


}
