

const int M = 1e3;
int dp[M+123][M+123];
string s1,s2;
int n,m;
int lcs(int i,int j)
{
     if(i>=n or j>=m)return 0;
     
      if(dp[i][j]!=-1)return dp[i][j];
      
      int ret=0;
      if(s1[i]==s2[j])
      {
          ret=1+lcs(i+1,j+1);
      }else{
      
        ret=max(lcs(i+1,j),lcs(i,j+1));
        
      }
      
      
      dp[i][j]=ret;
      
      return dp[i][j];
      
      
}


class Solution {
public:
     
    int longestCommonSubsequence(string text1, string text2) {
        
         s1=text1;
         s2=text2;
         n=s1.size();
         m=s2.size();
         memset(dp,-1,sizeof(dp));
         return lcs(0,0);
         
    }
    
};
